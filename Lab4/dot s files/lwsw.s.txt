# A demonstration of some simple MIPS instructions

.data             #data memory
N: .word 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99.


# Declare main as a global function

.globl main 



# All program code is placed after the
# .text assembler directive 

.text 		



# The label 'main' represents the starting point main:    
# Load Word
lw $t4, 0($t3)       # Load word from memory address 20 into $t4
nop
nop
nop
nop
nop

# Store Word
sw $t4, 4($t3)       # Store word from $t4 to memory address 24
nop
nop
nop
nop
nop

# Store Byte
sb $t4, 8($t3)       # Store byte from $t4 to memory address 28
nop
nop
nop
nop
nop

# Load Halfword
lh $t5, 0($t3)       # Load halfword from memory address 20 into $t5
nop
nop
nop
nop
nop

# Store Halfword
sh $t5, 12($t3)      # Store halfword from $t5 to memory address 32
nop
nop
nop
nop
nop
